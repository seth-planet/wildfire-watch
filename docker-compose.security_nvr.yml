# Docker Compose configuration for Security NVR service
# Can be used standalone or integrated with main wildfire-watch compose

version: '3.8'

services:
  security-nvr:
    build:
      context: ./security_nvr
      dockerfile: Dockerfile
    image: wildfire-watch/security-nvr:latest
    container_name: security-nvr
    restart: unless-stopped
    privileged: true
    network_mode: host
    
    # Hardware access
    devices:
      # Coral USB
      - /dev/bus/usb:/dev/bus/usb
      # Coral PCIe
      - /dev/apex_0:/dev/apex_0
      # GPU acceleration
      - /dev/dri:/dev/dri
      # Hailo
      - /dev/hailo0:/dev/hailo0
      # GPIO for power management
      - /dev/gpiomem:/dev/gpiomem
      
    # Volumes
    volumes:
      # Config directory
      - frigate_config:/config
      # Media storage (USB auto-mounted here)
      - /media/frigate:/media/frigate
      # Shared certificates
      - ../certs:/mnt/data/certs:ro
      # Timezone
      - /etc/localtime:/etc/localtime:ro
      # Custom models (optional)
      - ./models:/models/custom:ro
      # Logs
      - frigate_logs:/var/log/frigate
      
    # Shared memory for cameras
    shm_size: '512mb'
    
    # Environment variables
    environment:
      # MQTT Configuration
      - FRIGATE_MQTT_HOST=${MQTT_HOST:-mqtt_broker}
      - FRIGATE_MQTT_PORT=${MQTT_PORT:-8883}
      - FRIGATE_MQTT_TLS=${MQTT_TLS:-true}
      
      # Hardware Configuration
      - FRIGATE_HARDWARE=${FRIGATE_HARDWARE:-auto}
      - HARDWARE_ACCEL=${HARDWARE_ACCEL:-auto}
      - FRIGATE_MODEL=${FRIGATE_MODEL:-auto}
      
      # Storage Configuration
      - USB_MOUNT_PATH=/media/frigate
      - RECORD_RETAIN_DAYS=${RECORD_RETAIN_DAYS:-180}
      
      # Detection Configuration
      - DETECTION_FPS=${DETECTION_FPS:-5}
      - DETECTION_THRESHOLD=${DETECTION_THRESHOLD:-0.7}
      - CAMERA_DETECT_WIDTH=${CAMERA_DETECT_WIDTH:-1280}
      - CAMERA_DETECT_HEIGHT=${CAMERA_DETECT_HEIGHT:-720}
      
      # Power Management
      - POWER_MODE=${POWER_MODE:-balanced}
      - BATTERY_THRESHOLD=${BATTERY_THRESHOLD:-20}
      
      # Recording Quality
      - CAMERA_RECORD_QUALITY=${CAMERA_RECORD_QUALITY:-70}
      
      # Multi-node Configuration (optional)
      - ASSIGNED_CAMERAS=${ASSIGNED_CAMERAS:-}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - FRIGATE_LOGGER_LEVEL=${FRIGATE_LOGGER_LEVEL:-}
      
    # Capabilities
    cap_add:
      - SYS_NICE  # For process priority
      - SYS_PTRACE  # For hardware detection
      
    # Dependencies
    depends_on:
      - mqtt_broker
      - camera_detector
      
    # Port mappings
    ports:
      - "5000:5000"  # Frigate Web UI
      - "1935:1935"  # RTMP streams
      - "8554:8554"  # RTSP restream
      - "8555:8555/tcp"  # WebRTC
      - "8555:8555/udp"  # WebRTC
      
    # Labels for Balena
    labels:
      io.balena.features.dbus: '1'
      io.balena.features.kernel-modules: '1'
      io.balena.features.firmware: '1'
      io.balena.features.supervisor-api: '1'
      io.balena.features.balena-api: '1'
      io.balena.update.strategy: download-then-kill
      io.balena.update.handover-timeout: 600000

volumes:
  frigate_config:
  frigate_logs:
  
# Use external network if part of larger stack
networks:
  default:
    external:
      name: wildfire-watch_default
