[run]
# Measure coverage of all source files
source = .

# Exclude directories and files from coverage
omit = 
    # Test files
    */tests/*
    test_*.py
    *_test.py
    
    # Temporary and output directories
    tmp/*
    output/*
    htmlcov/*
    .pytest_cache/*
    __pycache__/*
    *.egg-info/*
    
    # Virtual environments
    venv/*
    .venv/*
    env/*
    
    # Documentation and configuration
    docs/*
    *.md
    setup.py
    conftest.py
    pytest_collection_plugin.py
    
    # Scripts that are utilities
    scripts/test_*.py
    scripts/demo_*.py
    
    # Generated or downloaded files
    converted_models/YOLO-NAS-pytorch/*
    mosquitto_data/*
    demo_output/*
    certs/*
    
    # Build artifacts
    build/*
    dist/*
    .git/*

# Use multiprocessing for accurate coverage with pytest-xdist
parallel = true
concurrency = multiprocessing

[report]
# Show lines missed in coverage report
show_missing = true

# Skip files with no executable code
skip_empty = true

# Precision for coverage percentages
precision = 2

# Exclude specific code patterns from coverage
exclude_lines =
    # Standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code
    def __repr__
    def __str__
    
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    
    # Don't complain about abstract methods
    @abstract
    @abstractmethod
    
    # Ignore type checking blocks
    if typing.TYPE_CHECKING:

# Sort the report by filename
sort = Name

[html]
# HTML report settings
directory = htmlcov
title = Wildfire Watch Coverage Report

[paths]
# Define equivalent paths for combining coverage data from different environments
source =
    .
    /home/*/wildfire-watch
    /app
    /workspace