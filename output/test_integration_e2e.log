============================= test session starts ==============================
platform linux -- Python 3.12.11, pytest-8.4.0, pluggy-1.6.0 -- /usr/bin/python3.12
cachedir: .pytest_cache
rootdir: /home/seth/wildfire-watch
plugins: cov-6.1.1, timeout-2.4.0, mock-3.14.1, asyncio-1.0.0, anyio-4.4.0
timeout: 60.0s
timeout method: signal
timeout func_only: False
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 5 items

tests/test_integration_e2e.py::TestE2EIntegration::test_service_startup_order ERROR [ 20%]
tests/test_integration_e2e.py::TestE2EIntegration::test_camera_discovery_to_frigate ERROR [ 40%]
tests/test_integration_e2e.py::TestE2EIntegration::test_fire_detection_to_pump_activation ERROR [ 60%]
tests/test_integration_e2e.py::TestE2EIntegration::test_health_monitoring ERROR [ 80%]
tests/test_integration_e2e.py::TestE2EIntegration::test_error_recovery ERROR [100%]

==================================== ERRORS ====================================
_______ ERROR at setup of TestE2EIntegration.test_service_startup_order ________
../.local/lib/python3.12/site-packages/docker/api/client.py:275: in _raise_for_status
    response.raise_for_status()
/usr/local/lib/python3.12/dist-packages/requests/models.py:1024: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json

The above exception was the direct cause of the following exception:
tests/integration_setup.py:149: in setup_gpio_trigger
    image = self.docker_client.images.get("wildfire-watch/gpio_trigger:test")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/models/images.py:333: in get
    return self.prepare_model(self.client.api.inspect_image(name))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/api/image.py:251: in inspect_image
    return self._result(
../.local/lib/python3.12/site-packages/docker/api/client.py:281: in _result
    self._raise_for_status(response)
../.local/lib/python3.12/site-packages/docker/api/client.py:277: in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/errors.py:39: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json: Not Found ("No such image: wildfire-watch/gpio_trigger:test")

During handling of the above exception, another exception occurred:
tests/test_integration_e2e.py:23: in integration_setup
    containers = setup.setup_all_services()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:195: in setup_all_services
    trigger = self.setup_gpio_trigger()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:152: in setup_gpio_trigger
    image, logs = self.docker_client.images.build(
../.local/lib/python3.12/site-packages/docker/models/images.py:304: in build
    raise BuildError(chunk['error'], result_stream)
E   docker.errors.BuildError: failed to parse platform : "" is an invalid OS component of "": OSAndVersion specifier component must match "^([A-Za-z0-9_-]+)(?:\\(([A-Za-z0-9_.-]*)\\))?$": invalid argument
---------------------------- Captured stdout setup -----------------------------
Setting up integration test environment...
✓ MQTT broker: mqtt-broker-test
✓ Camera detector: camera-detector-test
✓ Fire consensus: fire-consensus-test
____ ERROR at setup of TestE2EIntegration.test_camera_discovery_to_frigate _____
../.local/lib/python3.12/site-packages/docker/api/client.py:275: in _raise_for_status
    response.raise_for_status()
/usr/local/lib/python3.12/dist-packages/requests/models.py:1024: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json

The above exception was the direct cause of the following exception:
tests/integration_setup.py:149: in setup_gpio_trigger
    image = self.docker_client.images.get("wildfire-watch/gpio_trigger:test")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/models/images.py:333: in get
    return self.prepare_model(self.client.api.inspect_image(name))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/api/image.py:251: in inspect_image
    return self._result(
../.local/lib/python3.12/site-packages/docker/api/client.py:281: in _result
    self._raise_for_status(response)
../.local/lib/python3.12/site-packages/docker/api/client.py:277: in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/errors.py:39: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json: Not Found ("No such image: wildfire-watch/gpio_trigger:test")

During handling of the above exception, another exception occurred:
tests/test_integration_e2e.py:23: in integration_setup
    containers = setup.setup_all_services()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:195: in setup_all_services
    trigger = self.setup_gpio_trigger()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:152: in setup_gpio_trigger
    image, logs = self.docker_client.images.build(
../.local/lib/python3.12/site-packages/docker/models/images.py:304: in build
    raise BuildError(chunk['error'], result_stream)
E   docker.errors.BuildError: failed to parse platform : "" is an invalid OS component of "": OSAndVersion specifier component must match "^([A-Za-z0-9_-]+)(?:\\(([A-Za-z0-9_.-]*)\\))?$": invalid argument
_ ERROR at setup of TestE2EIntegration.test_fire_detection_to_pump_activation __
../.local/lib/python3.12/site-packages/docker/api/client.py:275: in _raise_for_status
    response.raise_for_status()
/usr/local/lib/python3.12/dist-packages/requests/models.py:1024: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json

The above exception was the direct cause of the following exception:
tests/integration_setup.py:149: in setup_gpio_trigger
    image = self.docker_client.images.get("wildfire-watch/gpio_trigger:test")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/models/images.py:333: in get
    return self.prepare_model(self.client.api.inspect_image(name))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/api/image.py:251: in inspect_image
    return self._result(
../.local/lib/python3.12/site-packages/docker/api/client.py:281: in _result
    self._raise_for_status(response)
../.local/lib/python3.12/site-packages/docker/api/client.py:277: in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/errors.py:39: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json: Not Found ("No such image: wildfire-watch/gpio_trigger:test")

During handling of the above exception, another exception occurred:
tests/test_integration_e2e.py:23: in integration_setup
    containers = setup.setup_all_services()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:195: in setup_all_services
    trigger = self.setup_gpio_trigger()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:152: in setup_gpio_trigger
    image, logs = self.docker_client.images.build(
../.local/lib/python3.12/site-packages/docker/models/images.py:304: in build
    raise BuildError(chunk['error'], result_stream)
E   docker.errors.BuildError: failed to parse platform : "" is an invalid OS component of "": OSAndVersion specifier component must match "^([A-Za-z0-9_-]+)(?:\\(([A-Za-z0-9_.-]*)\\))?$": invalid argument
_________ ERROR at setup of TestE2EIntegration.test_health_monitoring __________
../.local/lib/python3.12/site-packages/docker/api/client.py:275: in _raise_for_status
    response.raise_for_status()
/usr/local/lib/python3.12/dist-packages/requests/models.py:1024: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json

The above exception was the direct cause of the following exception:
tests/integration_setup.py:149: in setup_gpio_trigger
    image = self.docker_client.images.get("wildfire-watch/gpio_trigger:test")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/models/images.py:333: in get
    return self.prepare_model(self.client.api.inspect_image(name))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/api/image.py:251: in inspect_image
    return self._result(
../.local/lib/python3.12/site-packages/docker/api/client.py:281: in _result
    self._raise_for_status(response)
../.local/lib/python3.12/site-packages/docker/api/client.py:277: in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/errors.py:39: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json: Not Found ("No such image: wildfire-watch/gpio_trigger:test")

During handling of the above exception, another exception occurred:
tests/test_integration_e2e.py:23: in integration_setup
    containers = setup.setup_all_services()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:195: in setup_all_services
    trigger = self.setup_gpio_trigger()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:152: in setup_gpio_trigger
    image, logs = self.docker_client.images.build(
../.local/lib/python3.12/site-packages/docker/models/images.py:304: in build
    raise BuildError(chunk['error'], result_stream)
E   docker.errors.BuildError: failed to parse platform : "" is an invalid OS component of "": OSAndVersion specifier component must match "^([A-Za-z0-9_-]+)(?:\\(([A-Za-z0-9_.-]*)\\))?$": invalid argument
___________ ERROR at setup of TestE2EIntegration.test_error_recovery ___________
../.local/lib/python3.12/site-packages/docker/api/client.py:275: in _raise_for_status
    response.raise_for_status()
/usr/local/lib/python3.12/dist-packages/requests/models.py:1024: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json

The above exception was the direct cause of the following exception:
tests/integration_setup.py:149: in setup_gpio_trigger
    image = self.docker_client.images.get("wildfire-watch/gpio_trigger:test")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/models/images.py:333: in get
    return self.prepare_model(self.client.api.inspect_image(name))
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/api/image.py:251: in inspect_image
    return self._result(
../.local/lib/python3.12/site-packages/docker/api/client.py:281: in _result
    self._raise_for_status(response)
../.local/lib/python3.12/site-packages/docker/api/client.py:277: in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/docker/errors.py:39: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.49/images/wildfire-watch/gpio_trigger:test/json: Not Found ("No such image: wildfire-watch/gpio_trigger:test")

During handling of the above exception, another exception occurred:
tests/test_integration_e2e.py:23: in integration_setup
    containers = setup.setup_all_services()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:195: in setup_all_services
    trigger = self.setup_gpio_trigger()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
tests/integration_setup.py:152: in setup_gpio_trigger
    image, logs = self.docker_client.images.build(
../.local/lib/python3.12/site-packages/docker/models/images.py:304: in build
    raise BuildError(chunk['error'], result_stream)
E   docker.errors.BuildError: failed to parse platform : "" is an invalid OS component of "": OSAndVersion specifier component must match "^([A-Za-z0-9_-]+)(?:\\(([A-Za-z0-9_.-]*)\\))?$": invalid argument
=============================== warnings summary ===============================
../../../usr/lib/python3/dist-packages/paramiko/pkey.py:59
  /usr/lib/python3/dist-packages/paramiko/pkey.py:59: CryptographyDeprecationWarning: TripleDES has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.TripleDES and will be removed from cryptography.hazmat.primitives.ciphers.algorithms in 48.0.0.
    "cipher": algorithms.TripleDES,

../../../usr/lib/python3/dist-packages/paramiko/transport.py:220
  /usr/lib/python3/dist-packages/paramiko/transport.py:220: CryptographyDeprecationWarning: Blowfish has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.Blowfish and will be removed from cryptography.hazmat.primitives.ciphers.algorithms in 45.0.0.
    "class": algorithms.Blowfish,

../../../usr/lib/python3/dist-packages/paramiko/transport.py:244
  /usr/lib/python3/dist-packages/paramiko/transport.py:244: CryptographyDeprecationWarning: TripleDES has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.TripleDES and will be removed from cryptography.hazmat.primitives.ciphers.algorithms in 48.0.0.
    "class": algorithms.TripleDES,

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR tests/test_integration_e2e.py::TestE2EIntegration::test_service_startup_order
ERROR tests/test_integration_e2e.py::TestE2EIntegration::test_camera_discovery_to_frigate
ERROR tests/test_integration_e2e.py::TestE2EIntegration::test_fire_detection_to_pump_activation
ERROR tests/test_integration_e2e.py::TestE2EIntegration::test_health_monitoring
ERROR tests/test_integration_e2e.py::TestE2EIntegration::test_error_recovery
======================== 3 warnings, 5 errors in 16.64s ========================
